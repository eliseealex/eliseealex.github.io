<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Books on Блог Александра Елисеева</title>
    <link>http://eliseealex.me/books/</link>
    <description>Recent content in Books on Блог Александра Елисеева</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Aug 2016 10:48:13 +0300</lastBuildDate>
    <atom:link href="http://eliseealex.me/books/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia</title>
      <link>http://eliseealex.me/books/oreillys-learning-spark/</link>
      <pubDate>Wed, 17 Aug 2016 10:48:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/books/oreillys-learning-spark/</guid>
      <description>&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;img src=&#34;http://eliseealex.me/image/books/oreillys-learning-spark.jpg&#34; style=&#34;max-width: 450px;&#34; title=&#34;«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia&#34; alt=&#34;«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Недавно прошёл на собеседовании в качестве Big Data Enineer в компанию &lt;a href=&#34;http://wrike.com/&#34;&gt;Wrike&lt;/a&gt;. Там я буду заниматься созданием инфраструктуры для анализа данных и буду использовать &lt;a href=&#34;http://spark.apache.org/&#34;&gt;Apache Spark&lt;/a&gt;. До этого, я только слышал о нём, что многие используют, но не встречал на практике и не работал с ним локально.&lt;/p&gt;

&lt;p&gt;До выхода на работу мне нужно было узнать о Spark побольше и я взялся за эту книгу. Когда я её читал была актуальной версия спарка 1.6 и выходила версия 2.0. В книжке написано про спарк 1.2, поэтому там нет многих интересных подробностей из новых версий Спарка и есть устаревшая информация.&lt;/p&gt;

&lt;p&gt;Книга полезна тем, что она обзорно рассказывает о многих возможностях спарка и приводит примеры его использования, но мне не хватило глубины. Я хотел залезть поглубже и понять, как что работает, почему так сделали и как устроена его архитектура.&lt;/p&gt;

&lt;p&gt;Большая часть книги посвящена настройки спарка и его взаимосвязи с внешними интсрументами, поэтому полезной информации о внутреннем устройстве спарка там не так много. В книге мне показалось интересным:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;объяснение, что такое shuffling, когда он бывает и как оптимально работать, зная, что данные пересылаются по сети;&lt;/li&gt;
&lt;li&gt;описание spark streaming;&lt;/li&gt;
&lt;li&gt;поверхностный обзор spark sql и MlLib.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Не уверен, что книжка намного полезнее, чем официальная документация, но читать её однозначно проще. После общего обзора можно углубиться в то, что показалось интересным.&lt;/p&gt;

&lt;p&gt;Чтобы лучше понять, как работает спарк, советую презентацию &lt;a href=&#34;https://www.youtube.com/watch?v=dmL0N3qfSc8&#34;&gt;A Deeper Understanding of Spark Internals — Aaron Davidson (Databricks)&lt;/a&gt;. Там есть обзор модели построения запросов (DAG) и он объясняет, как работает shuffling, мне стало понятнее, что Spark может оптимизировать, а что нет.&lt;/p&gt;

&lt;p&gt;Ещё мне понравилась книга &lt;a href=&#34;http://shop.oreilly.com/product/0636920046967.do&#34;&gt;High Performance Spark By Holden Karau, Rachel Warren&lt;/a&gt;. Там спарк тоже рассматривается достаточно глубоко, она ещё не вышла полностью, но первые четыре главы выглядят многообещающе. Из неё я лучше понял, как работает планировка запроса. Узнал, что dataframe api и spark sql работают быстрее, чем стандартные rdd и понял почему.&lt;/p&gt;

&lt;p&gt;Ещё советую прочитать про колоночный формат файлов &lt;a href=&#34;https://parquet.apache.org/&#34;&gt;Parquet&lt;/a&gt;. Мне понравилась их &lt;a href=&#34;https://www.youtube.com/watch?v=MZNjmfx4LMc&#34;&gt;презентация&lt;/a&gt; (&lt;a href=&#34;http://www.slideshare.net/cloudera/hadoop-summit-36479635&#34;&gt;слайды в нормальном качестве&lt;/a&gt;), особенно та часть, где они показали, что производительность аналитики текста в сжатом формате выше, чем в исходном. Не уверен, что такие бенчмарки реально полезны, но они впечатляют.&lt;/p&gt;

&lt;p&gt;Я продолжаю учить спарк, если что-то найду, добавлю сюда. Если знаете, что-то, что поможет понять Spark лучше, пишите в коментариях, я добавлю в статью.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>«Сначала скажите „Нет“» — Д. Кемп</title>
      <link>http://eliseealex.me/books/camp-no/</link>
      <pubDate>Sun, 31 Jul 2016 10:09:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/books/camp-no/</guid>
      <description>&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;img src=&#34;http://eliseealex.me/image/books/say-no-jim-camp.jpg&#34; style=&#34;max-width: 450px;&#34; title=&#34;«Сначала скажите „Нет“» — Д. Кемп с Озона&#34; alt=&#34;«Сначала скажите „Нет“» — Д. Кемп&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Недавно прочитал книгу Джима Кэмпа «Сначала скажите “Нет”».
Увидел её в &lt;a href=&#34;http://artgorbunov.ru/school/&#34;&gt;системных требованиях школы стажёров Бюро&lt;/a&gt; и долго откладывал, мне не нравилось название. Да и переговоры я считал не самой важной частью жизни. Но я ошибся и сегодня расскажу, как она изменила мою жизнь.&lt;/p&gt;

&lt;p&gt;В работе я нечасто сталкиваюсь с переговорами. Я программист работаю над продуктом, мои переговоры — это общение с другими программистами, продукт-менеджером или заказчиком. Да и не хочется называть общение переговорами, а собеседников — соперниками. Но это ставит меня в невыгодное положение.&lt;/p&gt;

&lt;p&gt;Оказывается, переговоры — это любое общение, в котором нужно прийти к соглашению. Выбор страны для отпуска, ресторана на ужин или бара для посиделок с друзьями — переговоры. Ко мне приходит заказчик и просит добавить новую функцию — тоже переговоры. И если об этом не задумываться, можно упустить что-то важное.&lt;/p&gt;

&lt;p&gt;Рассмотрим подробнее пример, когда приходит заказчик и просит добавить новую функцию. Представим, что ему нужны сообщения после проведения платежей. С точки зрения заказчика — это простая задача, но она может сломать архитектуру системы. &lt;strong&gt;Лучше отказаться от задачи и выяснить реальную боль&lt;/strong&gt;, наверняка, можно избавиться от боли не ломая систему. Я замечал, что так делает мой тимлид, а теперь понимаю, как я могу этим пользоваться. &lt;em&gt;Нужно держать в голове цель&lt;/em&gt;, для меня это — оставить возможность удалить новую функцию и расширять систему дальше.&lt;/p&gt;

&lt;p&gt;Когда я общаюсь вне работы, я спорю и принимаю решение за нескольких друзей. Когда мой собеседник (на самом деле соперник) говорит «да, хорошо» или «я не знаю», я должен насторожиться. Он возлагает на меня надежды, которые я не смогу оправдать. Я просто не знаю, чего он хочет. Мне &lt;strong&gt;нужно понять его боль&lt;/strong&gt; и только тогда принимать решения.&lt;/p&gt;

&lt;p&gt;Иногда мои знакомые говорят о своих проблемах и я начинаю рассказывать о своей точки зрения на мир. Из этого не выходит ничего хорошего. Это тоже переговоры и &lt;strong&gt;когда у них проблемы, они хотят слушать рассказы о себе, а не обо мне&lt;/strong&gt;. Я неправ, но я исправлюсь.&lt;/p&gt;

&lt;p&gt;Мне понравилась эта книга. Если вы сомневаетесь, что она понравится вам просто дайте ей шанс, я тоже сомневался. Её стоит прочитать хотя бы из-за историй.&lt;/p&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://sourvillo.ru/?go=all/kemp-1/&#34;&gt;Обзор от Ивана Sourvillo&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://eliseealex.me/books&#34;&gt;Все книги&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Блог Александра Елисеева</title>
    <link>http://eliseealex.me/</link>
    <description>Recent content on Блог Александра Елисеева</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Oct 2016 10:14:13 +0300</lastBuildDate>
    <atom:link href="http://eliseealex.me/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Пойти на курсы вокала</title>
      <link>http://eliseealex.me/lifelist/1-vocal/</link>
      <pubDate>Sun, 09 Oct 2016 10:14:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lifelist/1-vocal/</guid>
      <description>&lt;p&gt;В августе обошёл несколько музыкальных школ своего города и наконец-то пошёл на вокал.
Хочу поделиться впечатлениями.&lt;/p&gt;

&lt;p&gt;До этого я считал себя безнадёжным певцом.
В начальной школе мне доверяли только треугольник =)
После этого, я захотел научиться играть на гитаре и петь.
Сходил в пару музыкальных школ и мне сказали, что петь нормально не смогу никогда.&lt;/p&gt;

&lt;p&gt;Я расстроился, но не терял надежды.
После этого я нашёл преподавателя и начал заниматься.
За два месяц так и не увидел прогресса и бросил.&lt;/p&gt;

&lt;p&gt;С тех пор прошло пять лет, но моё желание петь не давало мне покоя.
Я верил, что не смотря на всю сложность, я научусь.
И сейчас моя уверенность становится только крепче.&lt;/p&gt;

&lt;p&gt;Я занимаюсь всего месяц, был на 8 занятиях и петь я ещё не научился =)
Но я чувствую большой прогресс, у меня получается то, что я до этого считал недостижимым.
У меня нет врожденного таланта, но я знаю, что и слух и голос можно развить.&lt;/p&gt;

&lt;p&gt;Всё оказалось куда лучше, чем я думал =)&lt;/p&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist&#34;&gt;Зачем я это делаю?&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>«Inevitable» — Kevin Kelly</title>
      <link>http://eliseealex.me/books/kelly-inevitable/</link>
      <pubDate>Wed, 07 Sep 2016 21:48:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/books/kelly-inevitable/</guid>
      <description>

&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;img src=&#34;http://eliseealex.me/image/books/inevitable-kelly.jpg&#34; style=&#34;max-width: 450px;&#34; title=&#34;«Inevitable» — Kevin Kelly&#34; alt=&#34;«Inevitable» — Kevin Kelly&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Недавно в &lt;a href=&#34;http://fourhourworkweek.com/2016/06/05/kevin-kelly-ai-virtual-reality-and-the-inevitable/&#34;&gt;шоу Тима Ферриса был гость Кевин Келли&lt;/a&gt;.
Кевин Келли — это сооснователь журнала &lt;a href=&#34;http://www.wired.com/&#34;&gt;wired&lt;/a&gt;, проекта &lt;a href=&#34;http://rosettaproject.org/&#34;&gt;Rosetta Project&lt;/a&gt;, фонда &lt;a href=&#34;https://en.wikipedia.org/wiki/All_Species_Foundation&#34;&gt;All Species Foundation&lt;/a&gt; и большой энтузиаст новых технологий.
Он верил в интернет с самого начала и на его заре, он приходил к ведущим телекомпаниям с предложениями о развитии интернет проектов, но его игнорировали и считали за сумасшедшего.
В то время, никто не верил в интернет и не видел возможности на нём заработать.
Интернет появился не смотря на парадоксы: ленивые люди создают контент, который по качеству превосходит огромные медиа-корпорации.&lt;/p&gt;

&lt;p&gt;Во времена интернет никто не мог представить, как он будет выглядеть в будущем, также, как и сейчас никто не может представить, что придёт на смену интернета.
В книге речь идёт не о прошлом, а о настоящем и ближайшем будущем, это книга 2016 года и она рассказывает о технологиях, которые изменят мир в ближайшие 30 лет.
Конечно, это роботы, искуственный интелект и носимые девайсы, но Кевин Келли говорит о технологических тенденциях, которые придадут реальную форму всему, о чём мы мечтаем.&lt;/p&gt;

&lt;p&gt;Я опишу то, что я запомнил о каждой из тенденций и если вас что-то заинтересует, советую прочитать соответствующую главу. Мир изменят следующие силы:&lt;/p&gt;

&lt;h3 id=&#34;улучшение-becoming&#34;&gt;Улучшение (Becoming)&lt;/h3&gt;

&lt;p&gt;Постоянно обновляющиеся сервисы приходят на смену постоянным продуктам. Мир становится лучше каждый день и каждый день открывает горизонт для новых проблем.
Это значит, что мир будет становиться лучше, но не превратиться ни в утопию, ни в антиутопию, мир просто продолжит меняться, а обновления станут нашим ритуалом.&lt;/p&gt;

&lt;h3 id=&#34;интелектуализация-cognifying&#34;&gt;Интелектуализация (Cognifying)&lt;/h3&gt;

&lt;p&gt;Любую технологию можно будет сделать умнее благодаря дешёвому и мощному Исуственному Интеллекту, доступному в облаке.
Искуственный интеллект — очень разносторонний и уже сейчас вошёл в нашу жизнь.
Уже сегодня люди превращаются объединяются с технологиями и превращаются в киборгов.
Это даёт им возможность заниматься вещами, не известными раньше, например, микрохирургией или исследовать марс.
Предтавьте, скоро мозг наших домашних животных тоже будет дополнен ИИ и мы начнём действительно понимать друг друга.&lt;/p&gt;

&lt;p&gt;Роботы отнимут у нас работу, но на её место придёт новая ещё более интересная работа.
Кевин Келли отлично описал процесс внедрения роботов в нашу жизнь.&lt;/p&gt;

&lt;p&gt;Интеллектуализация приводит к тому, что творчество становится доступнее.
100 лет назад нужно было быть большим гиком, чтобы заниматься фотографией.
Сегодня любой человек со смартфоном сделает более качественное фото, чем большинство фотографов тех лет.
Да что там, 10 лет назад нужно было покупать большие камеры и много объективов, чтобы фотографировать для себя.
Мне никогда не нравилась фотография, но последний год, я смотрю на фото, сделанные на айфон и мне начинает нравится.
Сегодня я посмотрел презентацию iPhone 7 и считал камеру одним из самых важных нововведений.&lt;/p&gt;

&lt;p&gt;При чём здесь интеллектуализация?
Если вы смотрели презентацию iPhone 7, ту часть про камеру, вы наверняка часто слышали Our Software and Hardware.
Дело в том, что большая часть аналоговой работы в камерах телефонов заменена программным обеспечением.
Поэтому в айфонах и многих других телефонах нет выдвижного объектива, его заменил интеллект.&lt;/p&gt;

&lt;h3 id=&#34;течение-flowing&#34;&gt;Течение (Flowing)&lt;/h3&gt;

&lt;p&gt;Непрерывные потоки информации изменят мир.
Всё, что может быть скопировано — будет скопировано и будет растекаться по интернету.
Противостояние пиратству — похоже на противостояние прогрессу.
Люди должны сами выбирать платные сервисы, вместо бесплатных для получения информации.
Думаю, что многие понимают это, когда используют Netflix, вместо пиратских фильмов.
Конечно, можно потратить время, найти фильм, дождаться, пока он скачается и посмотреть его бесплатно.
Но куда более комфортно, просто включить его в нетфликсе и сразу наслаждаться им.
И совесть — чиста.&lt;/p&gt;

&lt;p&gt;Причин, по которым люди будут платить за бесплатный контент не так мало как кажется.&lt;/p&gt;

&lt;h3 id=&#34;экранирование-screening&#34;&gt;Экранирование (Screening)&lt;/h3&gt;

&lt;p&gt;Любая поверхность, на которой может появиться экран — превратиться в экран.&lt;/p&gt;

&lt;p&gt;Мы будем использовать экран для того, чтобы подстроить мир под себя и лучше понять себя.
Наши дети или внуки будут считать, что вещь просто сломана, если она не может ответить на наши действия.&lt;/p&gt;

&lt;h3 id=&#34;доступность-accessing&#34;&gt;Доступность (Accessing)&lt;/h3&gt;

&lt;p&gt;Общество смещается от владения вещами в сторону сервисов и аренды.&lt;/p&gt;

&lt;p&gt;Стилисты будут подбирать нам одежду, прачечные забирать её из наших домов, стирать гладить, и подбирать нам костюмы на каждый день в зависимости от погоды.
Сервисы делают избавляют нас от рутины, носками и бритвами по подписке уже никого не удивить.
Но американцы пошли дальше, они сдают модные, дорогие вещи в аренду понедельно. Мечтали о новой сумке от Louis Vuitton — s&amp;rsquo;il vous plaît.&lt;/p&gt;

&lt;p&gt;Мы будем платить за то, чем реально пользуемся, из услуг исчезнет мусор и деньги будут быстрее доходить до адресата.&lt;/p&gt;

&lt;h3 id=&#34;делёж-sharing&#34;&gt;Делёж (Sharing)&lt;/h3&gt;

&lt;p&gt;Одна из стадий развития творчества — это возможность свободно им делиться.&lt;/p&gt;

&lt;p&gt;Люди могут делиться фотографиями, книгами и фильмами, но есть ещё впереди огромный потенциал.
По воображаемой шкале Кевина Келли мы находимся на 2 ступени из 10.&lt;/p&gt;

&lt;p&gt;На самом деле, мы только учимся делиться творчеством.
За последние пару лет мы нашли несколько новых способов делиться фильмами:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Шестисекундные ролики на Vine;&lt;/li&gt;
&lt;li&gt;Гифки с кадрами из фильмов;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Это реальные виды творчества. И дальше — интреснее, например, можно будет переходить от сцен фильма к конкретным строчкам книги.
Нужно будет найти способ делиться моментами фильмов, цитатами из книг, перечитывать их, делать подборки.&lt;/p&gt;

&lt;p&gt;Когда мы научимся делиться — мы научимся создавать новое. Будем создавать новые книги из отдельных глав или цитат. Будем использовать Голливудские эффекты в своих короткометражных фильмах. И будем писать заварживающую музыку не имея музыкального образования.&lt;/p&gt;

&lt;h3 id=&#34;фильтрация-filtering&#34;&gt;Фильтрация (Filtering)&lt;/h3&gt;

&lt;p&gt;Информация будет персонализироваться под каждого из нас.&lt;/p&gt;

&lt;h3 id=&#34;переделки-remixing&#34;&gt;Переделки (Remixing)&lt;/h3&gt;

&lt;p&gt;Мы будем собирать собственное творчество из кусочков чужого.&lt;/p&gt;

&lt;h3 id=&#34;взаимодействие-interacting&#34;&gt;Взаимодействие (Interacting)&lt;/h3&gt;

&lt;p&gt;Мы будем становится частью мира компьютеров.
В нашу жизнь будут приходить носимые девайсы.
Наша реальность станет дополненной.
Компьютер станет частью нашей реальности, а мы — частью его.&lt;/p&gt;

&lt;h3 id=&#34;слежка-tracking&#34;&gt;Слежка (Tracking)&lt;/h3&gt;

&lt;p&gt;За нами будут следить ради нашего же блага.
Противостояние слежке будет замедлять остальные силы.
Нам останется только выбрать способ, с помощью которого за нами будут следить.&lt;/p&gt;

&lt;h3 id=&#34;любопытство-questioning&#34;&gt;Любопытство (Questioning)&lt;/h3&gt;

&lt;p&gt;Поиск вопросов станет важнее, чем поиск ответов.
Развитие мира будет зависеть от правильных вопросов.&lt;/p&gt;

&lt;p&gt;Тысячи попыток Томаса Эдисона изобрести лампочку сводятся к одному вопросу:
«А что если откачать воздух и использовать вольфрамовую нить».&lt;/p&gt;

&lt;h3 id=&#34;начинание-beginning&#34;&gt;Начинание (Beginning)&lt;/h3&gt;

&lt;p&gt;Все эти силы сводятся к созданию «мягкой сингулярности».
Когда все люди и машины будут объединены в одну глобальную систему.&lt;/p&gt;

&lt;h2 id=&#34;и-это-всё&#34;&gt;И это всё?&lt;/h2&gt;

&lt;p&gt;Я упустил много интересного, Кевин Келли не даёт чёткого описания каждой из сил, но я попытался ввести вас в курс и рассказать какие ответы и вопросы вы найдёте в книге.&lt;/p&gt;

&lt;p&gt;Для меня, эта книга — отличная инвестиция в образование.
Мне кажется, что она позволила мне окончательно уйти от мышления в стиле WEB 2.0 и перейти к модели нового мира.
Надеюсь, это хорошо отразится на моих проектах.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Велопутешествие в Европу</title>
      <link>http://eliseealex.me/lifelist/6-veloschengen/</link>
      <pubDate>Fri, 26 Aug 2016 08:48:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lifelist/6-veloschengen/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://eliseealex.me/image/lifelist/6-route.jpg&#34; style=&#34;max-width: 650px;&#34; title=&#34;Маршрут на Strida в велошенгене&#34; alt=&#34;Маршрут на Strida в велошенгене&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Съездил в велопутешествие в Финляндию. Наконец выгулял свой велик за границу.&lt;/p&gt;

&lt;p&gt;Путешествие организовал &lt;a href=&#34;https://vk.com/veloschengen&#34;&gt;велошенген&lt;/a&gt;, если кому-то нужно откатать визу в Финку, очень советую. В 9 утра я сел в маршрутку и поехал к границе. В Питере всё утро шёл дождь и я думал, что поездка выйдет грустной и сложной. Но нам повезло, в Финляндии оказалось солнечно и тепло, я даже искупался первый раз за лето, пусть и в ледяной воде.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://eliseealex.me/image/lifelist/6-weather.jpg&#34; style=&#34;max-width: 650px;&#34; title=&#34;Перерыв на пикник и замечательные погоды&#34; alt=&#34;Перерыв на пикник и замечательные погоды&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Если кто-то ещё не знает, я катаюсь на Strida, это такой треугольный складной велик с маленькими колёсами. Многие относятся к нему несерьёзно и не понимают его прелести, но я покупал его как раз из-за размеров, чтобы ездить в такие путешествия. 50 км показались очень простыми, самое то для тех, кто сомневается. Ехали медленно, в прогулочном темпе, часто отдыхали, ждали друг друга, и никуда не торопились.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://eliseealex.me/image/lifelist/6-strida.jpg&#34; style=&#34;max-width: 650px;&#34; title=&#34;Моя Strida&#34; alt=&#34;Моя Strida&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Конечно, хочу ещё.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist&#34;&gt;Зачем я это делаю?&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia</title>
      <link>http://eliseealex.me/books/oreillys-learning-spark/</link>
      <pubDate>Wed, 17 Aug 2016 10:48:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/books/oreillys-learning-spark/</guid>
      <description>&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;img src=&#34;http://eliseealex.me/image/books/oreillys-learning-spark.jpg&#34; style=&#34;max-width: 450px;&#34; title=&#34;«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia&#34; alt=&#34;«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Недавно прошёл на собеседовании в качестве Big Data Enineer в компанию &lt;a href=&#34;http://wrike.com/&#34;&gt;Wrike&lt;/a&gt;. Там я буду заниматься созданием инфраструктуры для анализа данных и буду использовать &lt;a href=&#34;http://spark.apache.org/&#34;&gt;Apache Spark&lt;/a&gt;. До этого, я только слышал о нём, что многие используют, но не встречал на практике и не работал с ним локально.&lt;/p&gt;

&lt;p&gt;До выхода на работу мне нужно было узнать о Spark побольше и я взялся за эту книгу. Когда я её читал была актуальной версия спарка 1.6 и выходила версия 2.0. В книжке написано про спарк 1.2, поэтому там нет многих интересных подробностей из новых версий Спарка и есть устаревшая информация.&lt;/p&gt;

&lt;p&gt;Книга полезна тем, что она обзорно рассказывает о многих возможностях спарка и приводит примеры его использования, но мне не хватило глубины. Я хотел залезть поглубже и понять, как что работает, почему так сделали и как устроена его архитектура.&lt;/p&gt;

&lt;p&gt;Большая часть книги посвящена настройки спарка и его взаимосвязи с внешними интсрументами, поэтому полезной информации о внутреннем устройстве спарка там не так много. В книге мне показалось интересным:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;объяснение, что такое shuffling, когда он бывает и как оптимально работать, зная, что данные пересылаются по сети;&lt;/li&gt;
&lt;li&gt;описание spark streaming;&lt;/li&gt;
&lt;li&gt;поверхностный обзор spark sql и MlLib.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Не уверен, что книжка намного полезнее, чем официальная документация, но читать её однозначно проще. После общего обзора можно углубиться в то, что показалось интересным.&lt;/p&gt;

&lt;p&gt;Чтобы лучше понять, как работает спарк, советую презентацию &lt;a href=&#34;https://www.youtube.com/watch?v=dmL0N3qfSc8&#34;&gt;A Deeper Understanding of Spark Internals — Aaron Davidson (Databricks)&lt;/a&gt;. Там есть обзор модели построения запросов (DAG) и он объясняет, как работает shuffling, мне стало понятнее, что Spark может оптимизировать, а что нет.&lt;/p&gt;

&lt;p&gt;Ещё мне понравилась книга &lt;a href=&#34;http://shop.oreilly.com/product/0636920046967.do&#34;&gt;High Performance Spark By Holden Karau, Rachel Warren&lt;/a&gt;. Там спарк тоже рассматривается достаточно глубоко, она ещё не вышла полностью, но первые четыре главы выглядят многообещающе. Из неё я лучше понял, как работает планировка запроса. Узнал, что dataframe api и spark sql работают быстрее, чем стандартные rdd и понял почему.&lt;/p&gt;

&lt;p&gt;Ещё советую прочитать про колоночный формат файлов &lt;a href=&#34;https://parquet.apache.org/&#34;&gt;Parquet&lt;/a&gt;. Мне понравилась их &lt;a href=&#34;https://www.youtube.com/watch?v=MZNjmfx4LMc&#34;&gt;презентация&lt;/a&gt; (&lt;a href=&#34;http://www.slideshare.net/cloudera/hadoop-summit-36479635&#34;&gt;слайды в нормальном качестве&lt;/a&gt;), особенно та часть, где они показали, что производительность аналитики текста в сжатом формате выше, чем в исходном. Не уверен, что такие бенчмарки реально полезны, но они впечатляют.&lt;/p&gt;

&lt;p&gt;Я продолжаю учить спарк, если что-то найду, добавлю сюда. Если знаете, что-то, что поможет понять Spark лучше, пишите в коментариях, я добавлю в статью.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Экспортируем scala-проект в docker при помощи sbt-native</title>
      <link>http://eliseealex.me/scala/docker-sbt-native/</link>
      <pubDate>Wed, 17 Aug 2016 10:16:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/scala/docker-sbt-native/</guid>
      <description>

&lt;p&gt;Одна из первых проблем, которая возникает при создании приложения — это его сборка и запуск на сторонних машинах. В этой статье я расскажу, как я использую docker для того чтобы доставлять новые версии своего приложения на сервер.&lt;/p&gt;

&lt;p&gt;Для сборки проектов на scala я использую &lt;a href=&#34;http://www.scala-sbt.org/&#34;&gt;sbt&lt;/a&gt;. Он позволяет загружать внешние зависимости к проектам и настраивать скрипты для сборки приложения, запуска и тестирования. Это как &lt;a href=&#34;https://maven.apache.org&#34;&gt;maven&lt;/a&gt; или &lt;a href=&#34;https://gradle.org&#34;&gt;gradle&lt;/a&gt; для java или &lt;a href=&#34;https://webpack.github.io/docs/&#34;&gt;webpack&lt;/a&gt; для js.&lt;/p&gt;

&lt;p&gt;В sbt есть модуль &lt;a href=&#34;http://www.scala-sbt.org/sbt-native-packager/&#34;&gt;sbt native packeger&lt;/a&gt;, который позволяет собирать jar-ники и класть их в Docker. Документацию в проекте читать достаточно сложно, поэтому расскажу, на что нужно обратить внимание, чтобы всё получилось.&lt;/p&gt;

&lt;p&gt;Я отталкиваюсь от того, что у вас уже есть готовый SBT-проект и объект с методом &lt;code&gt;main&lt;/code&gt;, который вы хотите запускать при старте приложения.&lt;/p&gt;

&lt;h2 id=&#34;сборка-проекта&#34;&gt;Сборка проекта&lt;/h2&gt;

&lt;p&gt;Для того, чтобы создать образ для операционной системы или для docker нужно сначала собрать приложение, которое будет лежать в этом образе. Для этого, нужно настроить sbt-native, чтобы он собирал приложение со всеми зависимостями и проверить, что всё работает правильно.&lt;/p&gt;

&lt;p&gt;Я настраивал эту сборку для создания &lt;a href=&#34;http://eliseealex.me/lise-bot&#34;&gt;бота Lise&lt;/a&gt;. Поэтому буду показывать сборку на его примере.&lt;/p&gt;

&lt;div class=&#34;factoid&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;https://github.com/sbt/sbt-native-packager&#34;&gt;Актуальная версия плагина здесь&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Сперва нужно добавить плагин в файл &lt;code&gt;/project/plugins.sbt&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;addSbtPlugin(&amp;quot;com.typesafe.sbt&amp;quot; % &amp;quot;sbt-native-packager&amp;quot; % &amp;quot;1.1.1&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь нужно включить плагин в вашем файле &lt;code&gt;build.sbt&lt;/code&gt;, если на него ругается ваш ide — ничего страшного, так бывает в мире scala:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;enablePlugins(JavaAppPackaging)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ещё в этом же файле лучше указать путь до вашего класса с методом &lt;code&gt;main&lt;/code&gt; (пока он у вас один, плагин будет сам его определять, но вы можете об этом забыть и всё сломается):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;mainClass in Compile := Some(&amp;quot;press.lis.lise.Bot&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;После этого, если вызвать в командной строке &lt;code&gt;sbt stage&lt;/code&gt; в папке &lt;code&gt;./target/universal/stage/bin/&lt;/code&gt; появится скрипт для запуска приложения локально (там скрипты для командной строки linux/mac и windows).&lt;/p&gt;

&lt;h2 id=&#34;сборка-приложения-для-разных-платформ&#34;&gt;Сборка приложения для разных платформ&lt;/h2&gt;

&lt;p&gt;Дальше, можно собрать приложение так, чтобы оно запускалось на большинстве операционных систем. Для этого нужно собрать пакет &lt;a href=&#34;http://www.scala-sbt.org/sbt-native-packager/formats/index.html&#34;&gt;в подходящем формате&lt;/a&gt;. Я покажу сборку на примере jar.&lt;/p&gt;

&lt;p&gt;Сборку пакета для докера мы разберём чуть ниже, она немного сложнее остальных.&lt;/p&gt;

&lt;p&gt;Для сборки нужно включить подходящий плагин, для jar это &lt;code&gt;JDKPackagerPlugin&lt;/code&gt;. Его нужно указать в &lt;code&gt;build.sbt&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;enablePlugins(JDKPackagerPlugin)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;После этого будут доступны новые параметры для сборки через &lt;code&gt;sbt&lt;/code&gt;. К примеру, если вызвать в командной строке:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sbt jdkPackager:packageBin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В папке &lt;code&gt;./target/universal/jdkpackager&lt;/code&gt; появятся все файлы, необходимы для запуска приложения (включая внешние зависимости).&lt;/p&gt;

&lt;p&gt;## Упаковка приложения в образ Docker&lt;/p&gt;

&lt;p&gt;Для доставки приложения на сервер я предпочитаю &lt;a href=&#34;http://docker.com/&#34;&gt;Docker&lt;/a&gt;. На нём не нужно устанавливать ничего лишнего и настраивать среду для scala, можно скачать образ, где всё настроено и просто добавить в него приложение.&lt;/p&gt;

&lt;p&gt;Для подключения Docker нужно в &lt;code&gt;build.sbt&lt;/code&gt; разрешить ещё один плагин:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;enablePlugins(DockerPlugin)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для его выполнения нужен локально установленный Docker, если у вас его нет — с установкой проблем не должно быть. После этого можно загрузить образ в локальный docker:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sbt docker:publishLocal
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;И запустить его:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;docker run -it lise-bot:1.0-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Аргумент среды можно указывать прямо при запуске приложения, к примеру я запускаю docker так:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sudo docker run --name=lise-bot --net=host lise-bot:1.0-SNAPSHOT -Dbot.token=XXX -Ddb.default.user=YYY -Ddb.default.password=ZZZ
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;--name=lise-bot&lt;/code&gt; — это название, которое отображается в утилитах докера, по которому можно остановить работу образа.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--net=host&lt;/code&gt; — обозначает, что локальный компьютер будет доступен по адресу localhost. На маке и windows это не работало, когда я писал эту статью.&lt;/p&gt;

&lt;h3 id=&#34;экспорт-артефакта-на-сервер&#34;&gt;Экспорт артефакта на сервер&lt;/h3&gt;

&lt;p&gt;Осталось настроить экспорт артефакта. Я загружаю образ на сервер через репозиторий &lt;a href=&#34;https://hub.docker.com/&#34;&gt;docker hub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для этого нужно создать аккаунт в &lt;a href=&#34;https://hub.docker.com/&#34;&gt;docker hub&lt;/a&gt; и войти в этот аккаунт используя:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;docker login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Дальше нужно в &lt;code&gt;build.sbt&lt;/code&gt; указать имя репозитория, в котором будет доступен образ и имя создателя. Для меня это выглядело так:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;maintainer in Docker := &amp;quot;eliseealex&amp;quot;

packageName in Docker := &amp;quot;eliseealex/lise-bot&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Приложение будет автоматически загружаться на Docker Hub если вызвать, в первый может быть долго:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sbt docker:publish
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;На сервере нужно скачать этот образ, указав версию такую же как в &lt;code&gt;build.sbt&lt;/code&gt; (версия желательно указывать, в докере стандартное версионирование работает странно):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sudo docker pull eliseealex/lise-bot:1.0-SNAPSHOT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Мы загрузили образ, теперь можно запустить само приложение. Я запускаю его скрытым в консоли (используя &lt;code&gt;&amp;amp;&lt;/code&gt;), но можно вместо этого использовать утилиту &lt;code&gt;screen&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sudo docker run --name=lise-bot --net=host eliseealex/lise-bot:1.0-SNAPSHOT -Dbot.token=XXX -Ddb.default.user=YYY -Ddb.default.password=ZZZ &amp;gt;&amp;gt; ~/lise-bot/bot.log &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для обновления, я обычно обновляю образ, останавливаю текущую программу и запускаю её заново. Полная процедура обновления выглядит так:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;sudo docker pull eliseealex/lise-bot:1.0-SNAPSHOT
sudo docker rm -f lise-bot
sudo docker run --name=lise-bot --net=host eliseealex/lise-bot:1.0-SNAPSHOT -Dbot.token=XXX -Ddb.default.user=YYY -Ddb.default.password=ZZZ &amp;gt;&amp;gt; ~/lise-bot/bot.log &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;https://github.com/eliseealex/lise.bot/blob/59e8433a39e6f4a2fd3e757250072123daf4f8b9/build.sbt&#34;&gt;Полностью настроенный проект можно посмотреть здесь&lt;/a&gt;. Но там много лишнего.&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Зачем нужны чатботы?</title>
      <link>http://eliseealex.me/lise-bot/1-why-chatbots/</link>
      <pubDate>Tue, 02 Aug 2016 11:57:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lise-bot/1-why-chatbots/</guid>
      <description>

&lt;p&gt;В последнее время, я заинтересовался созданием чат ботов и начал обращать внимание на то, что люди говорят о них. Многие представляют ботов, как полноценных собеседников, которые готовы по-человечески ответить на любой вопрос. Некоторые даже боятся, что скоро придут умные роботы, которые отнимут у них работу.&lt;/p&gt;

&lt;p&gt;Но я считаю, что мы всё ещё далеки от искуственного интеллекта о котором говорили писатели-фантасты. В этой статье я расскажу, чему можно сегодня научить роботов для чатов.&lt;/p&gt;

&lt;p&gt;Чат-боты — это не только искуственный интеллект, он может его использовать, но вокруг этого интеллекта нужно сделать много работы. В этой статье я расскажу о конечных итогах работы.&lt;/p&gt;

&lt;p&gt;Если вы хотите глубже погрузиться в машинное обучение и понять, какие проблемы нас отделяют от искусственного интеллекта — очень советую &lt;a href=&#34;http://www.wildml.com/2016/04/deep-learning-for-chatbots-part-1-introduction&#34;&gt;эту статью&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;персональная-информации&#34;&gt;Персональная информации&lt;/h2&gt;

&lt;p&gt;Ботов можно использовать для получения информации. Также как гугл или яндекс. При этом бот решает проблему реального человека. Представьте себе сайт погоды, чаще всего на него приходят люди по запросу «погода», абстрактные люди, о которых сайт ничего не знает. Поэтому обычно он сложный, на одной странице есть возможность посмотреть погоду на неделю, по часам, на два месяца вперёд, в другом городе или в другом районе.&lt;/p&gt;

&lt;p&gt;Боты могут предугадывать вопросы пользователя и давать ему советы даже раньше, чем он о них попросит. К примеру, бот который занимается погодой, зная, что человек живёт в Питере может сказать: «Вечером будет дождь, не забудь взять зонтик». Можно даже без занудства: «Сегодня опять дождь. Потерпи немного, говорят на выходных будет солнечно».&lt;/p&gt;

&lt;div class=&#34;summary&#34;&gt;

&lt;h4&gt;Фантазии о светлом будущем&lt;/h4&gt;

&lt;p&gt;
Сообщение боту похоже на запрос к поисковой системе. Поэтому яндекс или гугл могли бы делегировать свои запросы. Скорее всего, бот, которому может помочь реальный человек, будет куда полезнее в ответе на многие запросы, чем сайт. К примеру, если человек разбил экран на телефоне, он попадёт на сайт с неактуальными ценами (мастерские обычно ленятся их обновлять) и ему всё выяснять по телефону, хотя он мог бы написать боту, за которым стоит реальный консультант и выяснить всё куда быстрее (без звонков по разбитому телефону).
&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;групповая-информация&#34;&gt;Групповая информация&lt;/h2&gt;

&lt;p&gt;Кроме персональных ботов, есть боты для групповых чатов. Групповой бот не получает все сообщения пользователей, с ним можно общаться только с помощью команд.&lt;/p&gt;

&lt;p&gt;Таких ботов можно использовать как групповую электронную почту. К примеру, системы для управления проектами, системы для хранения или сборки кода могут оповещать бота о событиях. Бот форматирует такое сообщение и передаёт его в групповой чат.&lt;/p&gt;

&lt;p&gt;Но сообщения в групповом чате кажутся менее важными, чем в персональном или на почте. Поэтому, такие сообщения отличный способ рассказать о срочных, но неважных событиях: обновление большой задачи, неудачная сборка кода и тому подобное. Если человек был в отпуске и проблему уже решили, он может её спокойно пропустить.&lt;/p&gt;

&lt;p&gt;Второй вид коммуникации — это бот-секретарь. С таким ботом нужно общаться при помощи команд, он может принимать заказ на пиццу, помогать выбрать подарок или место для отдыха. Но самое классное — он может помогать решать проблемы, а не только оповещать о них.&lt;/p&gt;

&lt;p&gt;Представьте, что пришло оповещение о том, что нужно проверить задачу. Проверить может любой из членов команды. Бот может спросить, кто готов, кому интересно и в случае, если никто не отозвался, сам назначит проверяющего.&lt;/p&gt;

&lt;p&gt;Бот может напоминать о пропущенных сообщениях. Если оповещений много, среди них может затеряться какое-то важное. Ещё он может в конце или начале рабочего дня выдавать статистику по решённым задачам и подбадривать команду.&lt;/p&gt;

&lt;h2 id=&#34;бот-напарник&#34;&gt;Бот-напарник&lt;/h2&gt;

&lt;p&gt;Представьте бота для технической поддержки. Специалист поддержки создаёт список вопросов и ответов на них, а бот автоматически сопостовляет вопрос с ответом и отвечает пользователю. Но предусмотреть все вопросы невозможно, поэтому бот иногда ошибается. Для того, чтобы его контролировать, нужен реальный специалист технической поддержки.&lt;/p&gt;

&lt;p&gt;Пока что, боты не могут заменить человека, но могут стать ему полезным напарником. Они могут рекомендовать повторяющийся ответ на частые вопросы и даже автоматизировать сложные рутинные действия. К примеру бот может создавать отчёт в 1С и отправлять его по электронной почте. Бот может сделать всё, что может сделать программист.&lt;/p&gt;

&lt;p&gt;Такой бот может скрыть, с кем реально общается человек. Это полезно, чтобы быть доступным 24 часа в сутки.&lt;/p&gt;

&lt;h2 id=&#34;искуственный-интеллект-и-боты&#34;&gt;Искуственный интеллект и боты&lt;/h2&gt;

&lt;p&gt;Все боты, о которых я рассказал могут быть сделаны без искуственного интеллекта, но без него некоторые задачи будут очень сложны для создателей ботов. К примеру, чтобы понять, о чём говорит пользователь, чтобы учитывать предыдущие сообщения при ответе или, чтобы сделать какую-то работу за пользователя.&lt;/p&gt;

&lt;h2 id=&#34;мой-чатбот&#34;&gt;Мой чатбот&lt;/h2&gt;

&lt;p&gt;Я создаю своего чатбота для телеграма. Он хранит заметки и напоминает о важных или давно забытых идеях. Сейчас он помогает мне разгребать мои заметки, помечать их тегами и разгребать последние заметки за день или за неделю. Но в будущем, он станет умнее и будет автоматически предлагать теги к сообщению, делать подборку важных и давно забытых идей.&lt;/p&gt;

&lt;p&gt;Самая приятное в создании чатбота — это отношение количества затраченой энергии к результату. Создание простого, но качественного бота дешевле, чем создание простого, но качественного сайта. В ботах легко получить обратную связь и я считаю, что создание бота — отличный способ обучения программированию. Тем более, ботами легко делиться.&lt;/p&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;Это статья из серии &lt;a href=&#34;http://eliseealex.me/lise-bot&#34;&gt;создание бота Lise&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lise-bot/2-bot-intellect&#34;&gt;Читайте дальше про интеллект ботов&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Создание бота Lise</title>
      <link>http://eliseealex.me/lise-bot/</link>
      <pubDate>Mon, 01 Aug 2016 21:17:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lise-bot/</guid>
      <description>

&lt;p&gt;Жизнь меня ничему не учит. До сих пор я пытался делать универсальные проекты, которые, как я думал, подойдут всем. Я пытался сделать &lt;a href=&#34;http://eliseealex.me/lispress&#34;&gt;платформу для рассказа о любых проектах&lt;/a&gt;, ничего не вышло, &lt;a href=&#34;http://eliseealex.me/eliseealex-1&#34;&gt;зато сделал блог и рассказываю о своих&lt;/a&gt;. Я пытался сделать &lt;a href=&#34;http://eliseealex.me/hackday-41&#34;&gt;платформу для статистики&lt;/a&gt;, &lt;a href=&#34;http://eliseealex.me/dynamica-1&#34;&gt;попытался ещё раз&lt;/a&gt;, но она не решала моих проблем и я её забросил.&lt;/p&gt;

&lt;p&gt;В этот раз я решил исправиться. Я делаю личного бота. Изначально я хотел, чтобы он подошёл всем, но понял, что у меня нет абстрактных проблем. Моя боль не похожа на боль моего соседа или коллеги, поэтому я буду делать то, что нужно мне.&lt;/p&gt;

&lt;h3 id=&#34;цель&#34;&gt;Цель&lt;/h3&gt;

&lt;p&gt;В моей голове каждый день пробегают десятки идей. Иногда я их записываю, иногда делюсь ими, но чаще всего забываю о них. Я хочу сохранять их в любое время с любого устройства. Ещё хочу напоминания о недавно записанных важных идеях и подборки из старых идей.&lt;/p&gt;

&lt;p&gt;Для этого я и делаю бота для телеграм. Он будет доступен с любого устройства, даже если у меня нет интернета. Тем более, телеграм уже установлен у меня и у многих моих знакомых, показать бота друзьям будет просто.&lt;/p&gt;

&lt;h4 id=&#34;и-как-я-этого-добьюсь&#34;&gt;И как я этого добьюсь?&lt;/h4&gt;

&lt;p&gt;Бот будет сохранять мои заметки и запоминать их теги.&lt;/p&gt;

&lt;p&gt;Бот покажет последние сообщения за день или все сообщения связанные с хештегом.&lt;/p&gt;

&lt;p&gt;Со временем, он будет становиться умнее, спрашивать о пользе сообщения, создавать подборки важных и давно забытых сообщений и присылать их в наиболее подходящее время.&lt;/p&gt;

&lt;h3 id=&#34;побочные-цели-не-расходитесь-будет-интересно&#34;&gt;Побочные цели (не расходитесь, будет интересно)&lt;/h3&gt;

&lt;div class=&#34;factoid&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;https://github.com/eliseealex/lise.bot&#34;&gt;&lt;i class=&#34;fa fa-github&#34;&gt;&lt;/i&gt; Посмотрите исходный код&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://telegram.me/lise_bot&#34;&gt;&lt;i class=&#34;fa fa-paper-plane&#34;&gt;&lt;/i&gt; Поздоровайтесь с Lise&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Хочу рассказать о том, как я создаю и продвигаю бота. Объясню простыми словами технические потробности, так, чтобы меня поняли менеджеры, но и программистам тоже не было скучно. Расскажу о том, как бот понимает, какое сообщение нужно удалить или восстановить и чем они могут быть полезны людям у которых нет много времени и денег на большие проекты.&lt;/p&gt;

&lt;p&gt;Расскажу о том, как я буду продвигать этого бота. Хочу сделать процесс использования бота на столько простым и увлекательным, чтобы людям тоже было интересно им пользоваться.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>«Сначала скажите „Нет“» — Д. Кемп</title>
      <link>http://eliseealex.me/books/camp-no/</link>
      <pubDate>Sun, 31 Jul 2016 10:09:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/books/camp-no/</guid>
      <description>&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;img src=&#34;http://eliseealex.me/image/books/say-no-jim-camp.jpg&#34; style=&#34;max-width: 450px;&#34; title=&#34;«Сначала скажите „Нет“» — Д. Кемп с Озона&#34; alt=&#34;«Сначала скажите „Нет“» — Д. Кемп&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;Недавно прочитал книгу Джима Кэмпа «Сначала скажите “Нет”».
Увидел её в &lt;a href=&#34;http://artgorbunov.ru/school/&#34;&gt;системных требованиях школы стажёров Бюро&lt;/a&gt; и долго откладывал, мне не нравилось название. Да и переговоры я считал не самой важной частью жизни. Но я ошибся и сегодня расскажу, как она изменила мою жизнь.&lt;/p&gt;

&lt;p&gt;В работе я нечасто сталкиваюсь с переговорами. Я программист работаю над продуктом, мои переговоры — это общение с другими программистами, продукт-менеджером или заказчиком. Да и не хочется называть общение переговорами, а собеседников — соперниками. Но это ставит меня в невыгодное положение.&lt;/p&gt;

&lt;p&gt;Оказывается, переговоры — это любое общение, в котором нужно прийти к соглашению. Выбор страны для отпуска, ресторана на ужин или бара для посиделок с друзьями — переговоры. Ко мне приходит заказчик и просит добавить новую функцию — тоже переговоры. И если об этом не задумываться, можно упустить что-то важное.&lt;/p&gt;

&lt;p&gt;Рассмотрим подробнее пример, когда приходит заказчик и просит добавить новую функцию. Представим, что ему нужны сообщения после проведения платежей. С точки зрения заказчика — это простая задача, но она может сломать архитектуру системы. &lt;strong&gt;Лучше отказаться от задачи и выяснить реальную боль&lt;/strong&gt;, наверняка, можно избавиться от боли не ломая систему. Я замечал, что так делает мой тимлид, а теперь понимаю, как я могу этим пользоваться. &lt;em&gt;Нужно держать в голове цель&lt;/em&gt;, для меня это — оставить возможность удалить новую функцию и расширять систему дальше.&lt;/p&gt;

&lt;p&gt;Когда я общаюсь вне работы, я спорю и принимаю решение за нескольких друзей. Когда мой собеседник (на самом деле соперник) говорит «да, хорошо» или «я не знаю», я должен насторожиться. Он возлагает на меня надежды, которые я не смогу оправдать. Я просто не знаю, чего он хочет. Мне &lt;strong&gt;нужно понять его боль&lt;/strong&gt; и только тогда принимать решения.&lt;/p&gt;

&lt;p&gt;Иногда мои знакомые говорят о своих проблемах и я начинаю рассказывать о своей точки зрения на мир. Из этого не выходит ничего хорошего. Это тоже переговоры и &lt;strong&gt;когда у них проблемы, они хотят слушать рассказы о себе, а не обо мне&lt;/strong&gt;. Я неправ, но я исправлюсь.&lt;/p&gt;

&lt;p&gt;Мне понравилась эта книга. Если вы сомневаетесь, что она понравится вам просто дайте ей шанс, я тоже сомневался. Её стоит прочитать хотя бы из-за историй.&lt;/p&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://sourvillo.ru/?go=all/kemp-1/&#34;&gt;Обзор от Ивана Sourvillo&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://eliseealex.me/books&#34;&gt;Все книги&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>День 11. Остеопатия</title>
      <link>http://eliseealex.me/lifelist/19-osteo/</link>
      <pubDate>Sat, 23 Jul 2016 22:09:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lifelist/19-osteo/</guid>
      <description>&lt;p&gt;Я слышал много скепсиса в адрес остеопатов. Но на прошлых выходных всё же сходил к одному из них.
У меня нет особых проблем со здоровьем, но я много сижу за компьютером и мне не нравится моя осанка.
Я уже сходил на два приёма, мне дали несколько упражнений и посоветовали очевидное: делать разминку, когда сижу за компьютером.
Уже после первого посещения стал проще держать правильную осанку, но о долгосрочных результатах я вам ещё расскажу.&lt;/p&gt;

&lt;p&gt;Кроме того, &lt;a href=&#34;http://eliseealex.me/lifelist&#34;&gt;лайфлист&lt;/a&gt; не даёт мне расслабиться.
Я читаю книжки, вместо статей. Я занимаюсь английской граматикой.
Я не бросаю рисования скетчей.
Многие скетчи получаются отвратительными, если честно, но думаю, что красота в скетчах — вопрос опыта.&lt;/p&gt;

&lt;p&gt;На этой неделе я прочитал «Сначала скажите нет» Джима Кэмпа.
Там есть глава о том, что стоит ставить только те цели, которые полностью удастся контролировать.
К примеру, проявить заботу о собеседнике — хорошая цель, а продать товара на миллион баксов в ходе переговоров — плохая.
В первом случае можно полностью контролировать свои действия и это — цель.
Во втором случае, конечное решение зависит от противника и это — желаемый результат.&lt;/p&gt;

&lt;p&gt;Когда я создавал свой лайфлист я перепутал цели и результаты в некоторых пунктах.
Я говорил о результатах, когда хотел заработать 1000$ на проектах, написать статью с 1000 репостов и ещё в нескольких пунктах.
Я думал, что если целюсь в солнце, то точно попаду в луну, но я не предложил никаких конкретных шагов по достижению результатов.
Зато я готов признать свои ошибки и не держусь за изначальную формулировку листа.&lt;/p&gt;

&lt;p&gt;Ну и на последок немного цифр:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Уже нарисовал 13 скетчей из 300;&lt;/li&gt;
&lt;li&gt;Уже прочитал 1 книгу из 40, читаю 3 следующих;&lt;/li&gt;
&lt;li&gt;Сделал 12 упражнений из 145 в книги «English grammar in use»;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/45-gratitude&#34;&gt;Предыдущее дело&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist&#34;&gt;Зачем я это делаю?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/6-veloschengen&#34;&gt;Следующее дело&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Обзоры книг</title>
      <link>http://eliseealex.me/books/</link>
      <pubDate>Sat, 23 Jul 2016 16:57:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/books/</guid>
      <description>

&lt;p&gt;Книги занимают почётное место в моей жизни.
Я стараюсь читать каждый день хотя бы по 30 минут.
Я читаю медленно, я читал мало, поэтому у меня впереди долгий и интересный путь.
Буду делиться с вами своими заметками рекомендациями, нерекомендациями
и конкретными моментами, которые мне понравились в книга.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Простите, я только начал писать эту рубрику, поэтому многих обзоров пока нет.&lt;/em&gt;
&lt;em&gt;Зато они есть у людей, которые посоветовали мне эти книги, можете пролитать вниз и перейти к ним на сайт.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;вдохновение&#34;&gt;Вдохновение&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/books/kelly-inevitable&#34;&gt;«Inevitable» — Kevin Kelly&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;общение&#34;&gt;Общение&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;«Сторителлинг» — Аннет Симпсон;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/books/camp-no&#34;&gt;«Сначала скажите „Нет“» — Джим Кемп&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;управление&#34;&gt;Управление&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;«Бизнес с нуля» (Lean Startup) — Эрик Рис;&lt;/li&gt;
&lt;li&gt;«Rework» by Basecamp;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;программирование&#34;&gt;Программирование&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/books/oreillys-learning-spark/&#34;&gt;«Learning Spark» — Holden Karau, Andy Konwinski, Patrick Wendell, Matei Zaharia&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;«7 more languages in 7 weeks»;&lt;/li&gt;
&lt;li&gt;«Software Product Management Specialization» conspects by University of Alberta;&lt;/li&gt;
&lt;li&gt;«Machine Learning» course by Andrew Ng;&lt;/li&gt;
&lt;li&gt;«97 Things Every Programmer Should Know» by O&amp;rsquo;Reilly.&lt;/li&gt;
&lt;li&gt;«JavaScript: The Good Parts» by Douglas Crockford;&lt;/li&gt;
&lt;li&gt;«7 languages in 7 weeks» by Bruce A. Tate;&lt;/li&gt;
&lt;li&gt;«7 databases in 7 weeks» by Eric Redmond and Jim R. Wilson;&lt;/li&gt;
&lt;li&gt;«Pragmatic programmer» by Andrew Hunt and David Thomas;&lt;/li&gt;
&lt;li&gt;«Effective Java» by Joshua Bloch;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;саморазвитие&#34;&gt;Саморазвитие&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;«Жизнь на полной мощности» — Джим Лоэр и Тони Шварц;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;творчество&#34;&gt;Творчество&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;«Вы сможете рисовать через 30 дней» — Марк Кистлер;
&lt;br&gt; &lt;em&gt;Даже у меня получилось.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;«Визуальные заметки на практике» — Майк Роуд;
&lt;br&gt; &lt;em&gt;&lt;a href=&#34;http://interesno.co/myself/d064edcb3f71&#34;&gt;Только почитайте эту милоту&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ресурсы-на-которых-я-ищу-книги&#34;&gt;Ресурсы на которых я ищу книги&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.golodnyj.ru/&#34;&gt;Подкаст «Вкусные книги»&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://artgorbunov.ru/school/29aug2016/&#34;&gt;Системные требования бюро Артёма Горбунова&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://book.glvrd.ru/finish/&#34;&gt;Книги, которые посоветовал Максим Ильяхов&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ludwigbistronovsky.ru/books/&#34;&gt;Книги, которые посоветовал Людвиг Быстроновский&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Первое дело сделано</title>
      <link>http://eliseealex.me/lifelist/45-gratitude/</link>
      <pubDate>Thu, 14 Jul 2016 08:48:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lifelist/45-gratitude/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://eliseealex.me/image/lifelist/45-sergey-answer.png&#34; style=&#34;max-width: 650px;&#34; title=&#34;Первая победа&#34; alt=&#34;Первая победа&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Написал письмо с благодарностью Сергею и быстро получил ответ ^^&lt;/p&gt;

&lt;p&gt;Первый шаг сделан, хорошее начало. Уже успел рассказать друзьям и получить их поддержку.&lt;/p&gt;

&lt;p&gt;Начал готовиться к следующим победам. Уже записался к остеопату, давно мечтал сходить, но никак не получалось.&lt;/p&gt;

&lt;p&gt;И немножко цифр:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Сейчас читаю первые 4 книги из 40;&lt;/li&gt;
&lt;li&gt;Уже нарисовал 3 скетча из 300;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Появилось желание сделать сервис для генерации красивых элементов для сайта.
Хочу встраивать счётчики прогресса в статьи и генерировать подписи к картинкам.
Чтоб не лазить лишний раз в фотошоп или скетч.&lt;/p&gt;

&lt;p&gt;Завёл &lt;a href=&#34;https://telegram.me/stolenideas&#34;&gt;канал в телеграме&lt;/a&gt;,
буду писать анонсы там, а в твиттере перейду на английский.&lt;/p&gt;

&lt;div class=&#34;factoid factoid-bottom&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist&#34;&gt;Зачем я это делаю?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/19-osteo&#34;&gt;Следующее дело&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Lifelist</title>
      <link>http://eliseealex.me/lifelist/</link>
      <pubDate>Tue, 12 Jul 2016 08:23:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/lifelist/</guid>
      <description>&lt;p&gt;Мне 21 год. Я только что закончил университет и уже два года работаю программистом.&lt;/p&gt;

&lt;p&gt;Я всегда боялся попасть в офисное рабство и вести скучную жизнь.
Но так получается, что я закончил учёбу и начал работать полный день в офисе.
Прошёл месяц, а я уже планирую на 20 лет вперёд, в какую школу я отдам детей, когда и на что брать ипотеку.
Это не то, о чём я мечтал, так я не сделаю мир лучше.&lt;/p&gt;

&lt;p&gt;Недавно я увидел проект Сергея Капличного &lt;a href=&#34;http://blog.skaplichniy.ru/all/lifelist/&#34;&gt;«Лайфлист»&lt;/a&gt; и захотел собственный список безумств.&lt;/p&gt;

&lt;p&gt;Без вызова жизнь не мила. До августа 2017 года я планирую:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/1-vocal&#34;&gt;&lt;i class=&#34;fa fa-trophy&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; Пойти на курсы вокала&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Записать свою песню;&lt;/li&gt;
&lt;li&gt;Пойти на курсы хора;&lt;/li&gt;
&lt;li&gt;Съездить в Европу на несколько дней с рюкзаком;&lt;/li&gt;
&lt;li&gt;Съездить в путешествие по хостелам (не бронируя ничего);&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/6-veloschengen&#34;&gt;&lt;i class=&#34;fa fa-trophy&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; Съездить в велопутешествие&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Прожить месяц вне дома;&lt;/li&gt;
&lt;li&gt;Побывать на венском балу;&lt;/li&gt;
&lt;li&gt;Переехать;&lt;/li&gt;
&lt;li&gt;Выпустить продукт за который буду просить денег;&lt;/li&gt;
&lt;li&gt;Создать свой курс;&lt;/li&gt;
&lt;li&gt;Пройти продвинутый курс Главреда;&lt;/li&gt;
&lt;li&gt;Написать статью в корпоративный блог;&lt;/li&gt;
&lt;li&gt;Отправить письмо благодарности;&lt;/li&gt;
&lt;li&gt;Научиться готовить мясо;&lt;/li&gt;
&lt;li&gt;Месяц без сладкого;&lt;/li&gt;
&lt;li&gt;Месяц без алкоголя;&lt;/li&gt;
&lt;li&gt;Сходить на йогу;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/19-osteo&#34;&gt;&lt;i class=&#34;fa fa-trophy&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; Сходить к остеопату&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Сходить на массаж;&lt;/li&gt;
&lt;li&gt;Съездить на конференцию и познакомиться с кем-нибудь;&lt;/li&gt;
&lt;li&gt;Поучаствовать в фотосессии;&lt;/li&gt;
&lt;li&gt;Выступить с докладом;&lt;/li&gt;
&lt;li&gt;Прочитать 40 книг;&lt;/li&gt;
&lt;li&gt;Сходить в модную мужскую парикмахерскую;&lt;/li&gt;
&lt;li&gt;Сделать скетч, который не стыдно выставить в блог;&lt;/li&gt;
&lt;li&gt;Закончить два блокнота для скетчей;&lt;/li&gt;
&lt;li&gt;Подобрать духи;&lt;/li&gt;
&lt;li&gt;Зарисовать скетчи о путешествиях;&lt;/li&gt;
&lt;li&gt;Пойти на курсы по улучшению почерка;&lt;/li&gt;
&lt;li&gt;Собрать десять историй;&lt;/li&gt;
&lt;li&gt;Написать статью в блог в виде истории;&lt;/li&gt;
&lt;li&gt;Дать развёрнутый ответ на Stackoverflow;&lt;/li&gt;
&lt;li&gt;Станцевать в незнакомом баре;&lt;/li&gt;
&lt;li&gt;Написать статью в виде бортового журнала;&lt;/li&gt;
&lt;li&gt;Сделать дизайн проектов;&lt;/li&gt;
&lt;li&gt;Завести блог на английском;&lt;/li&gt;
&lt;li&gt;Закончить курс Реймонда Мёрфи по английскому;&lt;/li&gt;
&lt;li&gt;Научиться делать лендинг и привлечь 100 человек к боту;&lt;/li&gt;
&lt;li&gt;Сходить на балет;&lt;/li&gt;
&lt;li&gt;Сходить в театр;&lt;/li&gt;
&lt;li&gt;Написать в популярный блог о разработке своего продукта;&lt;/li&gt;
&lt;li&gt;Написать в лайфстайл блог о своём продукте;&lt;/li&gt;
&lt;li&gt;Создать альбом приятных воспоминаний;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eliseealex.me/lifelist/45-gratitude/&#34;&gt;&lt;i class=&#34;fa fa-trophy&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; Поблагодарить Сергея Капличного за идею&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Где искать идеи?</title>
      <link>http://eliseealex.me/thoughts/3-steal-ideas/</link>
      <pubDate>Thu, 07 Jul 2016 08:45:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/thoughts/3-steal-ideas/</guid>
      <description>&lt;p&gt;Всегда поражали люди, которые говорят, что вокруг полно отличных идей.
Я никогда не был таким креативным счастливчиком, но создавать полезные продукты хотел всегда.
Я давно уже понял, что полезный продукт — это тот, который решает реальную проблему, лучше других продуктов.&lt;/p&gt;

&lt;div class=&#34;factoid&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://levels.io&#34;&gt;Создатель nomadlist.com&lt;/a&gt; рассказывает, как он создал &lt;a href=&#34;https://www.techinasia.com/12-startups-in-12-months-how-this-digital-nomad-doing-it&#34;&gt;12 продуктов за 12 месяцев&lt;/a&gt;.&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;Решать проблему лучше остальных звучит амбициозно. Но можно ограничиться частью аудитории. К примеру, возьмём TripAdvisor — большой сайт для планирования путешествий. Сделать сайт, который будет однозначно лучше — сложно и дорого. Но мы можем увести от них часть аудитории, к примеру фрилансеров-путешественников (номадов). Из этого может получиться успешный продукт, такой как &lt;a href=&#34;https://nomadlist.com/&#34;&gt;https://nomadlist.com/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Когда я наткнулся на &lt;a href=&#34;http://fundersandfounders.com/how-to-make-money-the-startup-way/&#34;&gt;инфографику Funders and Founders&lt;/a&gt; я понял, что не обязательно создавать что-то новое. Люди долго трудились до меня создавали продукты, чтобы решить реальные проблемы. Можно взять актуальный продукт, который уже продаётся и сделать его лучше.&lt;/p&gt;

&lt;p&gt;Так, к примеру, можно соединить сервис рекомендаций фильмов с сервисами, которые определяют активность и настроение. Это значительно улучшит алгоритм рекомендаций. Когда я устал, хочу найти что-то лёгкое и доброе, «Кинопоиск» предлагает мне долгие и трудные фильмы, к примеру, «Список Шиндлера».&lt;/p&gt;

&lt;p&gt;Или можно брать идеи из книг-бестселлеров, соединять их и создавать приложения для телефона, основанные на этих идеях. В конце концов, авторы уже проверили, что тема актуальна, а люди готовы платить.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Без помидорок плохо</title>
      <link>http://eliseealex.me/thoughts/2-pomodoro/</link>
      <pubDate>Mon, 27 Jun 2016 09:12:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/thoughts/2-pomodoro/</guid>
      <description>&lt;p&gt;Я давно узнал о &lt;a href=&#34;http://pomodorotechnique.com/&#34;&gt;Pomodoro Technique&lt;/a&gt;.
И мне нравятся идеи, которые лежат в основе этой техники, но я не привык работать с помощью помидорок.
Когда я увлекаюсь, я могу проработать несколько часов подряд.&lt;/p&gt;

&lt;p&gt;Недавно я занялся новым проектом.
Я написал план и разбил проект на части.
Закончил первую часть, получил первые результаты и вошёл в поток.&lt;/p&gt;

&lt;p&gt;Я перешёл ко второй части, получил результаты,
но у меня никак не получалось написать задуманное.
Я был в потоке и не хотел отвлекаться, я продолжал искать решение проблемы.
В итоге, потратив два часа на бессмысленные поиски, я понял, что проблема не так уж важна.&lt;/p&gt;

&lt;p&gt;Я был разочарован, но я всё ещё был в потоке. И я продолжил.
Опять небольшие результаты и опять нерешаемая проблема.
На этот раз я потратил на неё 4 часа. Но в этот раз не нашёл альтернатив.
Я отложил проект и пошёл отдыхать.
Уже не оставалось сил на активный отдых, пришлось лечь на диван и смотреть сериальчики.&lt;/p&gt;

&lt;p&gt;И всё потому, что я не хотел прерывать поток.
Мне нужно было отвлечься, понять, что мой подход неверный и перейти к другому.
Поэтому в Pomodoro Technique так важны перерывы.
Перерывы тоже часть работы, в неё приходят важные мысли.&lt;/p&gt;

&lt;p&gt;Я исправился на следующих выходных.
Я заново сделал то, на что потратил целый день за 6 помидорок (3 часа).
Но важнее был перерыв, в который я понял, что и как делать.
А главное, такая работа принесла удовольствие и после этого я успел отлично отдохнуть.&lt;/p&gt;

&lt;div style=&#34;text-align: center&#34;&gt;
  &lt;img src=&#34;http://eliseealex.me/image/t-2/grustniy_pomidor.jpg&#34; style=&#34;max-width: 450px;&#34; title=&#34;Помидор не одобряет&#34; alt=&#34;Помидор не одобряет&#34;/&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Размышления о навыках</title>
      <link>http://eliseealex.me/thoughts/1-skills/</link>
      <pubDate>Fri, 24 Jun 2016 08:44:13 +0300</pubDate>
      
      <guid>http://eliseealex.me/thoughts/1-skills/</guid>
      <description>&lt;div class=&#34;factoid&#34;&gt;
  &lt;p&gt;&lt;a href=&#34;http://fourhourworkweek.com/2016/06/05/kevin-kelly-ai-virtual-reality-and-the-inevitable/&#34;&gt;Вдохновлён выпуском подкаста The Tim Ferriss Show&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


&lt;p&gt;В описании ко многим вакансиям публикуют огромный список практических требований. Хотя в реальности они ждут всего три общих навыка: умение делать в срок, умение работать в команде и умение производить отличный результат. Но об этих навыках мало кто пишет, чаще всего их пытаются оценить косвенно. Из-за этого практические навыки возводятся в идеал, люди учатся про запас тому, что заведомо устарело.&lt;/p&gt;

&lt;p&gt;У тех людей, которые поддаются этому культу, в голове много устаревших знаний. Они учатся про запас, но, тем не менее, перед применением старых навыков, приходится вспоминать всё заново. Поэтому, стоит учиться чему-то “за пять минут” до реального применения.&lt;/p&gt;

&lt;p&gt;Но это не значит, что учиться бесполезно. Есть большое количество основных навыков, которые помогают освоить все остальные. К примеру: умение учиться, умение работать на компьютере и принятие обновлений, умение оценить полную стоимость решения, физика, математика, литература, история. Всё это полезно, но очень отстранено от жизни. Для обучения этим навыкам нужен запас продуманных историй. Всегда нужно уметь ответить на вопрос: “Зачем мне это нужно?” до того, как этот вопрос появится. И всегда нужно попадать ответом точно в сердце своей аудитории.&lt;/p&gt;

&lt;p&gt;Но и технические знания не бесполезны. В последнее время в айти сложилась сильная культура прохождения собеседований. И это значит, что нужно читать всё о технических навыках написанных в вакансии, по крайней мере по тому, что это же сделают другие. Но возможность подготовиться к собеседованию — не самое важное в новых технических навыках. Самое важное — это эффект путешествия.&lt;/p&gt;

&lt;p&gt;Путешествие — это возможность под другим углом взглянуть на свою культуру, на свои обычаи. Путешествия — это быстрая возможность понять, что ничего не знаешь и получить много новых знаний. Путешествия особенно важны для молодых людей, готовых к переменам. Они формируют их жизнь.&lt;/p&gt;

&lt;p&gt;Такой же эффект получается и от изучения новых технологий, возможность взглянуть под другим углом на свою работу, на свои умения. Они делают специалиста лучше и умнее. На это стоит тратить время, но не стоит делать из этого культ.&lt;/p&gt;

&lt;p&gt;В этом плане мне очень нравится серия книг In Seven Weeks. Я уже прочитал &lt;a href=&#34;https://pragprog.com/book/btlang/seven-languages-in-seven-weeks&#34;&gt;Seven Languages In Seven Weeks&lt;/a&gt;, &lt;a href=&#34;https://pragprog.com/book/rwdata/seven-databases-in-seven-weeks&#34;&gt;Seven Databases In Seven Weeks&lt;/a&gt; и пару глав &lt;a href=&#34;https://pragprog.com/book/pb7con/seven-concurrency-models-in-seven-weeks&#34;&gt;Seven Concurrency Models In Seven Weeks&lt;/a&gt; и считаю, что это тот самый идеальный способ путешествий в мир новых технологий.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>